{"version":3,"file":"node.js","names":["fs","path","crypto","networkInterfaces","execSync","bcrypt","axios","HttpsProxyAgent","CONSTANTS","randomWeighted","sleep","tokenString","length","useNumbers","useUppercase","lowercaseChars","LOWER_CASE","uppercaseChars","UPPER_CASE","numbers","NUMBERS","characters","randomString","byte","randomBytes","index","tokenHex","Math","ceil","toString","slice","tokenUuid","useDashes","uuid","randomUUID","replaceAll","tokenWeighted","dict","randomInt","serverIp","interfaces","devName","interfaceValue","i","alias","family","address","startsWith","internal","getVersion","date","Date","trim","formatDatePart","value","padStart","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","parseFloat","createNumDir","mainDirectory","mkdirSync","recursive","join","e","console","error","message","md5","data","createHash","update","digest","hashBcrypt","plainText","hashSync","genSaltSync","verifyBcrypt","hash","compareSync","formatProxy","proxy","protocol","splitByProtocol","split","includes","proxyParts","pop","proxyEnd","parseInt","proxyStart","proxyObject","args","splitById","splitByConn","host","port","splitByAuth","auth","username","password","proxify","proxyConfig","callback","timeout","mode","get","resetApi","res","httpsAgent","status","replace","lines","line"],"sources":["../src/node.js"],"sourcesContent":["import fs from \"fs\";\r\nimport path from \"path\";\r\nimport crypto from \"crypto\";\r\nimport {networkInterfaces} from \"os\";\r\nimport {execSync} from \"child_process\";\r\n\r\nimport bcrypt from \"bcrypt\";\r\nimport axios from \"axios\";\r\nimport {HttpsProxyAgent} from \"hpagent\";\r\n\r\nimport {CONSTANTS, randomWeighted, sleep} from \"./index.js\";\r\n\r\n\r\nexport function tokenString(length, useNumbers = true, useUppercase = false) {\r\n    const lowercaseChars = CONSTANTS.LOWER_CASE;\r\n    const uppercaseChars = CONSTANTS.UPPER_CASE;\r\n    const numbers = CONSTANTS.NUMBERS;\r\n\r\n    let characters = lowercaseChars;\r\n    if (useUppercase) characters += uppercaseChars;\r\n    if (useNumbers) characters += numbers;\r\n\r\n    let randomString = '';\r\n    while (randomString.length < length) {\r\n        const byte = crypto.randomBytes(1)[0];\r\n        const index = byte % characters.length;\r\n        if (byte < (256 - (256 % characters.length))) {\r\n            randomString += characters[index];\r\n        }\r\n    }\r\n\r\n    return randomString;\r\n}\r\n\r\nexport function tokenHex(length) {\r\n    return crypto\r\n        .randomBytes(Math.ceil(length / 2))\r\n        .toString('hex')\r\n        .slice(0, length);\r\n}\r\n\r\nexport function tokenUuid(useDashes = true) {\r\n    const uuid = crypto.randomUUID().toString();\r\n    return useDashes ? uuid : uuid.replaceAll(\"-\", \"\")\r\n}\r\n\r\nexport function tokenWeighted(dict) {\r\n    return randomWeighted(dict, crypto.randomInt);\r\n}\r\n\r\nexport function serverIp() {\r\n    const interfaces = networkInterfaces();\r\n    for (const devName in interfaces) {\r\n        const interfaceValue = interfaces[devName];\r\n        for (let i = 0; i < interfaceValue.length; i++) {\r\n            const alias = interfaceValue[i];\r\n            if (alias.family === 'IPv4' && alias.address !== '127.0.0.1' && !alias.address.startsWith(\"192.168.\") && !alias.internal)\r\n                return alias.address;\r\n        }\r\n    }\r\n    return '127.0.0.1';\r\n}\r\n\r\nexport function getVersion() {\r\n    try {\r\n        const date = new Date(execSync('git show -s --format=%ci HEAD').toString().trim());\r\n        const formatDatePart = (value) => value.toString().padStart(2, '0');\r\n        const year = date.getFullYear().toString().slice(-2);\r\n        const month = formatDatePart(date.getMonth() + 1);\r\n        const day = formatDatePart(date.getDate());\r\n        const hour = formatDatePart(date.getHours());\r\n        const minute = formatDatePart(date.getMinutes());\r\n        return parseFloat(`${year}${month}.${day}${hour}${minute}`);\r\n    } catch {\r\n        return 1.0;\r\n    }\r\n}\r\n\r\nexport function createNumDir(mainDirectory) {\r\n    fs.mkdirSync(mainDirectory, {recursive: true});\r\n    for (let i = 0; i <= 9; i++) {\r\n        try {\r\n            fs.mkdirSync(path.join(mainDirectory, i.toString()));\r\n        } catch (e) {\r\n            console.error(`createNumDir:${i}`, e.message);\r\n        }\r\n    }\r\n}\r\n\r\nexport function md5(data) {\r\n    return crypto.createHash('md5').update(data).digest(\"hex\");\r\n}\r\n\r\nexport function hashBcrypt(plainText) {\r\n    return bcrypt.hashSync(plainText, bcrypt.genSaltSync(10));\r\n}\r\n\r\nexport function verifyBcrypt(plainText, hash) {\r\n    return bcrypt.compareSync(plainText, hash);\r\n}\r\n\r\nexport function formatProxy(proxy, protocol = \"http\") {\r\n    proxy = proxy.trim();\r\n    const splitByProtocol = proxy.split(\"://\");\r\n    if (1 < splitByProtocol.length)\r\n        protocol = splitByProtocol[0];\r\n    proxy = splitByProtocol[splitByProtocol.length - 1];\r\n    if (!proxy.includes(\"@\")) {\r\n        const proxyParts = proxy.split(\":\");\r\n        if (4 <= proxyParts.length) {\r\n            proxy = `${proxyParts[proxyParts.length - 2]}:${proxyParts[proxyParts.length - 1]}@`;\r\n            proxyParts.pop();\r\n            proxyParts.pop();\r\n            proxy += proxyParts.join(\":\");\r\n        }\r\n    }\r\n    const proxyParts = proxy.split(':');\r\n    const proxyEnd = parseInt(proxyParts[proxyParts.length - 1]);\r\n    const proxyStart = proxyParts[proxyParts.length - 2];\r\n    if (!proxyStart.includes(\".\")) {\r\n        proxyParts.pop();\r\n        proxyParts[proxyParts.length - 1] = crypto.randomInt(parseInt(proxyStart), proxyEnd + 1).toString();\r\n    }\r\n    return protocol + \"://\" + proxyParts.join(':');\r\n}\r\n\r\nexport function proxyObject(...args) {\r\n    let proxy = formatProxy(...args);\r\n    const splitByProtocol = proxy.split('://');\r\n    const splitById = splitByProtocol[splitByProtocol.length - 1].split('@');\r\n    const splitByConn = splitById[splitById.length - 1].split(':');\r\n    proxy = {\r\n        protocol: splitByProtocol[0],\r\n        host: splitByConn[0],\r\n        port: parseInt(splitByConn[1]),\r\n    };\r\n    if (1 < splitById.length) {\r\n        const splitByAuth = splitById[0].split(':');\r\n        proxy.auth = {\r\n            username: splitByAuth[0],\r\n            password: splitByAuth[1]\r\n        };\r\n    }\r\n    return proxy;\r\n}\r\n\r\nexport async function proxify(proxyConfig, callback = formatProxy) {\r\n    proxyConfig = proxyConfig || {};\r\n    const timeout = 7000;\r\n    if (proxyConfig.mode === 1) {\r\n        return callback(proxyConfig.proxy);\r\n    } else if (proxyConfig.mode === 2) {\r\n        const proxy = callback(proxyConfig.proxy);\r\n        try {\r\n            await axios.get(proxyConfig.resetApi, {timeout});\r\n        } catch {\r\n            return false;\r\n        }\r\n        await sleep(5);\r\n        for (let i = 0; i < 5; i++) {\r\n            try {\r\n                const res = await axios.get(\"https://api64.ipify.org\", {\r\n                    timeout,\r\n                    httpsAgent: new HttpsProxyAgent({proxy, timeout: 7000})\r\n                });\r\n                if (res.status === 200)\r\n                    return proxy;\r\n            } catch {\r\n                await sleep(3);\r\n            }\r\n        }\r\n    } else if (proxyConfig.mode === 3) {\r\n        try {\r\n            const res = await axios.get(proxyConfig.resetApi, {timeout});\r\n            if (res.status === 200)\r\n                return callback(proxyConfig.proxy);\r\n        } catch {\r\n            return false;\r\n        }\r\n    } else if (proxyConfig.mode === 4) {\r\n        return callback(proxyConfig.proxy).replace(\"{SESSION}\", tokenHex(8));\r\n    } else if (proxyConfig.mode === 5) {\r\n        try {\r\n            const lines = proxyConfig.proxy.split(\"\\n\");\r\n            const line = lines[crypto.randomInt(0, lines.length)];\r\n            return callback(line);\r\n        } catch {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}"],"mappings":"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"}