{"version":3,"file":"node.js","names":["_fs","_interopRequireDefault","require","_path","_crypto","_os","_child_process","_bcrypt","_index","obj","__esModule","default","tokenString","length","useNumbers","useUppercase","lowercaseChars","CONSTANTS","LOWER_CASE","uppercaseChars","UPPER_CASE","numbers","NUMBERS","characters","randomString","byte","crypto","randomBytes","index","tokenHex","Math","ceil","toString","slice","tokenUuid","useDashes","uuid","randomUUID","replaceAll","tokenWeighted","dict","randomWeighted","randomInt","serverIp","interfaces","networkInterfaces","devName","interfaceValue","i","alias","family","address","startsWith","internal","getVersion","date","Date","execSync","trim","formatDatePart","value","padStart","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","parseFloat","createNumDir","mainDirectory","fs","mkdirSync","recursive","path","join","e","console","error","message","md5","data","createHash","update","digest","hashBcrypt","plainText","encryptionKey","bcrypt","hashSync","genSaltSync","verifyBcrypt","hash","compareSync","formatProxy","proxy","protocol","splitByProtocol","split","includes","proxyParts","pop","proxyEnd","parseInt","proxyStart","proxyObject","args","splitById","splitByConn","host","port","splitByAuth","auth","username","password","proxyValue","proxies","splitClear","replace"],"sources":["../src/node.js"],"sourcesContent":["import fs from \"fs\";\r\nimport path from \"path\";\r\nimport crypto from \"crypto\";\r\nimport {networkInterfaces} from \"os\";\r\nimport {execSync} from \"child_process\";\r\n\r\nimport bcrypt from \"bcrypt\";\r\n\r\nimport {CONSTANTS, randomWeighted, splitClear} from \"./index.js\";\r\n\r\n\r\nexport function tokenString(length, useNumbers = true, useUppercase = false) {\r\n    const lowercaseChars = CONSTANTS.LOWER_CASE;\r\n    const uppercaseChars = CONSTANTS.UPPER_CASE;\r\n    const numbers = CONSTANTS.NUMBERS;\r\n\r\n    let characters = lowercaseChars;\r\n    if (useUppercase) characters += uppercaseChars;\r\n    if (useNumbers) characters += numbers;\r\n\r\n    let randomString = '';\r\n    while (randomString.length < length) {\r\n        const byte = crypto.randomBytes(1)[0];\r\n        const index = byte % characters.length;\r\n        if (byte < (256 - (256 % characters.length))) {\r\n            randomString += characters[index];\r\n        }\r\n    }\r\n\r\n    return randomString;\r\n}\r\n\r\nexport function tokenHex(length) {\r\n    return crypto\r\n        .randomBytes(Math.ceil(length / 2))\r\n        .toString('hex')\r\n        .slice(0, length);\r\n}\r\n\r\nexport function tokenUuid(useDashes = true) {\r\n    const uuid = crypto.randomUUID().toString();\r\n    return useDashes ? uuid : uuid.replaceAll(\"-\", \"\")\r\n}\r\n\r\nexport function tokenWeighted(dict) {\r\n    return randomWeighted(dict, crypto.randomInt);\r\n}\r\n\r\nexport function serverIp() {\r\n    const interfaces = networkInterfaces();\r\n    for (const devName in interfaces) {\r\n        const interfaceValue = interfaces[devName];\r\n        for (let i = 0; i < interfaceValue.length; i++) {\r\n            const alias = interfaceValue[i];\r\n            if (alias.family === 'IPv4' && alias.address !== '127.0.0.1' && !alias.address.startsWith(\"192.168.\") && !alias.internal)\r\n                return alias.address;\r\n        }\r\n    }\r\n    return '127.0.0.1';\r\n}\r\n\r\nexport function getVersion() {\r\n    try {\r\n        const date = new Date(execSync('git show -s --format=%ci HEAD').toString().trim());\r\n        const formatDatePart = (value) => value.toString().padStart(2, '0');\r\n        const year = date.getFullYear().toString().slice(-2);\r\n        const month = formatDatePart(date.getMonth() + 1);\r\n        const day = formatDatePart(date.getDate());\r\n        const hour = formatDatePart(date.getHours());\r\n        const minute = formatDatePart(date.getMinutes());\r\n        return parseFloat(`${year}${month}${day}.${hour}${minute}`);\r\n    } catch {\r\n        return 1.0;\r\n    }\r\n}\r\n\r\nexport function createNumDir(mainDirectory) {\r\n    fs.mkdirSync(mainDirectory, {recursive: true});\r\n    for (let i = 0; i <= 9; i++) {\r\n        try {\r\n            fs.mkdirSync(path.join(mainDirectory, i.toString()));\r\n        } catch (e) {\r\n            console.error(`createNumDir:${i}`, e.message);\r\n        }\r\n    }\r\n}\r\n\r\nexport function md5(data) {\r\n    return crypto.createHash('md5').update(data).digest(\"hex\");\r\n}\r\n\r\nexport function hashBcrypt(plainText, encryptionKey = \"\") {\r\n    return bcrypt.hashSync(plainText + encryptionKey, bcrypt.genSaltSync(10));\r\n}\r\n\r\nexport function verifyBcrypt(plainText, hash, encryptionKey = \"\") {\r\n    return bcrypt.compareSync(plainText + encryptionKey, hash);\r\n}\r\n\r\nexport function formatProxy(proxy, protocol = \"http\") {\r\n    proxy = proxy.trim();\r\n    const splitByProtocol = proxy.split(\"://\");\r\n    if (1 < splitByProtocol.length)\r\n        protocol = splitByProtocol[0];\r\n    proxy = splitByProtocol[splitByProtocol.length - 1];\r\n    if (!proxy.includes(\"@\")) {\r\n        const proxyParts = proxy.split(\":\");\r\n        if (4 <= proxyParts.length) {\r\n            proxy = `${proxyParts[proxyParts.length - 2]}:${proxyParts[proxyParts.length - 1]}@`;\r\n            proxyParts.pop();\r\n            proxyParts.pop();\r\n            proxy += proxyParts.join(\":\");\r\n        }\r\n    }\r\n    const proxyParts = proxy.split(':');\r\n    const proxyEnd = parseInt(proxyParts[proxyParts.length - 1]);\r\n    const proxyStart = proxyParts[proxyParts.length - 2];\r\n    if (!proxyStart.includes(\".\")) {\r\n        proxyParts.pop();\r\n        proxyParts[proxyParts.length - 1] = crypto.randomInt(parseInt(proxyStart), proxyEnd + 1).toString();\r\n    }\r\n    return protocol + \"://\" + proxyParts.join(':');\r\n}\r\n\r\nexport function proxyObject(...args) {\r\n    let proxy = formatProxy(...args);\r\n    const splitByProtocol = proxy.split('://');\r\n    const splitById = splitByProtocol[splitByProtocol.length - 1].split('@');\r\n    const splitByConn = splitById[splitById.length - 1].split(':');\r\n    proxy = {\r\n        protocol: splitByProtocol[0],\r\n        host: splitByConn[0],\r\n        port: parseInt(splitByConn[1]),\r\n    };\r\n    if (1 < splitById.length) {\r\n        const splitByAuth = splitById[0].split(':');\r\n        proxy.auth = {\r\n            username: splitByAuth[0],\r\n            password: splitByAuth[1]\r\n        };\r\n    }\r\n    return proxy;\r\n}\r\n\r\nexport function proxyValue(proxies) {\r\n    let proxy;\r\n    proxies = proxies || \"\";\r\n    proxies = splitClear(proxies);\r\n    if (proxies.length < 1)\r\n        return null;\r\n    proxy = proxies[crypto.randomInt(0, proxies.length)];\r\n    proxy = formatProxy(proxy);\r\n    proxy = proxy.replace(\"{SESSION}\", tokenHex(8));\r\n    return proxy || null;\r\n}"],"mappings":"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"}